// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MikeDemoDBEntities.Models;

namespace MikeDemoDBEntities.Migrations
{
    [DbContext(typeof(MikeDBContext))]
    [Migration("20191120170921_MissedName")]
    partial class MissedName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MikeDemoDBEntities.Models.AutomobileTypes", b =>
                {
                    b.Property<int>("AutomobileTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("wheels")
                        .HasColumnType("int");

                    b.HasKey("AutomobileTypeId");

                    b.ToTable("AutomobileTypes");

                    b.HasData(
                        new
                        {
                            AutomobileTypeId = 1,
                            description = "A Truck",
                            type = "Truck",
                            wheels = 4
                        },
                        new
                        {
                            AutomobileTypeId = 2,
                            description = "A Car",
                            type = "Car",
                            wheels = 4
                        },
                        new
                        {
                            AutomobileTypeId = 3,
                            description = "A Motorbike",
                            type = "MotorBike",
                            wheels = 2
                        });
                });

            modelBuilder.Entity("MikeDemoDBEntities.Models.Automobiles", b =>
                {
                    b.Property<int>("AutomobileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AutomobileTypesAutomobileTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("JsonDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("AutomobileId");

                    b.HasIndex("AutomobileTypesAutomobileTypeId");

                    b.ToTable("Automobiles");
                });

            modelBuilder.Entity("MikeDemoDBEntities.Models.Automobiles", b =>
                {
                    b.HasOne("MikeDemoDBEntities.Models.AutomobileTypes", "AutomobileTypes")
                        .WithMany()
                        .HasForeignKey("AutomobileTypesAutomobileTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
